{"version":3,"sources":["components/Searchbar/Searchbar.js","sourse/images-API.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onChange","imageName","className","type","value","autoComplete","autoFocus","placeholder","page","fetchImages","fetch","then","res","ok","json","Promise","reject","Error","ImageGalleryItem","src","id","alt","Button","onClick","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ImageGallery","state","imagesSearch","fetchingImages","onLoadMoreClick","e","console","log","target","fetchImagesAPI","props","imagesOnFeedback","setState","hits","prevProps","prevState","this","map","image","webformatURL","Component","App","handleChange","currentTarget","trim","ReactDOM","render","StrictMode","getElementById"],"mappings":"kTAEe,SAASA,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC5C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAhB,UACE,wBAAQC,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEF,SAAUA,EACVI,MAAOH,EACPC,UAAU,mBACVC,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,kCCjBtB,IAAIC,EAAO,EA2BI,OAACC,YAxBhB,SAAqBR,GAEjB,OAAOS,MAAM,8BAAD,OAA+BT,EAA/B,iBAAiDO,EAAjD,gBAJC,qCAID,2DACbG,MAAK,SAAAC,GACJ,OAAIA,EAAIC,IAYRL,GAAQ,EAVGI,EAAIE,QAGRC,QAAQC,OAAO,IAAIC,MAAJ,6IAAuChB,UCVlD,SAASiB,EAAT,GAAwC,IAAZC,EAAW,EAAXA,IAAKC,EAAM,EAANA,GAE9C,OACE,oBAAalB,UAAU,mBAAvB,SACE,qBAAKiB,IAAKA,EAAKE,IAAI,GAAGnB,UAAU,4BADzBkB,G,MCFE,SAASE,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAM5B,OALCC,OAAOC,SAAS,CACjBC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAIN,wBAAQP,QAAUA,EAASrB,UAAU,YAArC,uB,ICLa6B,E,4MACnBC,MAAQ,CACNC,aAAc,M,EAehBC,eAAiB,a,EAEjBC,gBAAkB,SAAAC,GAChBC,QAAQC,IAAIF,EAAEG,QACdC,EAAe/B,YAAY,EAAKgC,MAAMxC,WAAWU,MAAK,SAAA+B,GACpD,EAAKC,SAAS,CAAEV,aAAcS,EAAiBE,W,wDAjBnD,SAAmBC,EAAWC,GAAY,IAAD,OACnCD,EAAU5C,YAAc8C,KAAKN,MAAMxC,YHYvCO,EAAO,EGVLgC,EACG/B,YAAYsC,KAAKN,MAAMxC,WACvBU,MAAK,SAAA+B,GACJ,EAAKC,SAAS,CAAEV,aAAcS,EAAiBE,UAEnDP,QAAQC,IAAIS,KAAKf,MAAMC,iB,oBAa3B,WACE,IAAQA,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBAAK/B,UAAU,YAAf,UACE,oBAAIA,UAAU,eAAd,SACG+B,GACCA,EAAae,KAAI,SAAAC,GAAK,OACpB,cAAC/B,EAAD,CAAkBE,GAAI6B,EAAM7B,GAAID,IAAK8B,EAAMC,oBAIjD,cAAC,EAAD,CAAU3B,QAASwB,KAAKZ,yB,GAtCUgB,aC2B3BC,E,4MAzBbpB,MAAQ,CACN/B,UAAW,I,EAGboD,aAAe,SAAAjB,GACRA,EAAEkB,cAAclD,MAAMmD,QAG3B,EAAKZ,SAAS,CAAE1C,UAAWmC,EAAEkB,cAAclD,S,4CAG7C,WACE,OACE,qCACE,cAACL,EAAD,CACEC,SAAU+C,KAAKM,aACfpD,UAAW8C,KAAKf,MAAM/B,YAGxB,cAAC,EAAD,CAAcA,UAAW8C,KAAKf,MAAM/B,mB,GApB1BkD,aCDlBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,W","file":"static/js/main.78902ea0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Searchbar({ onChange, imageName }) {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={onChange}\r\n          value={imageName}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","let page = 1;\r\nconst USER_KEY = '21922241-ac53faccd58a6508b64890669';\r\n\r\nfunction fetchImages(imageName) {\r\n\r\n    return fetch(`https://pixabay.com/api/?q=${imageName}&page=${page}&key=${USER_KEY}&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(res => {\r\n    if (res.ok) {\r\n        incrementPage();\r\n        return res.json()\r\n    }\r\n    \r\n    return Promise.reject(new Error(`Нету картинок по запросу: ${imageName}`))\r\n})\r\n    \r\n}\r\n\r\n\r\nfunction incrementPage() {\r\n    page += 1;\r\n}\r\n\r\nexport function resetPage () {\r\n    page = 1;\r\n  };\r\n\r\n\r\nexport default {fetchImages}","import React from 'react';\r\n\r\nexport default function ImageGalleryItem({ src, id }) {\r\n\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\">\r\n      <img src={src} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Button.css'\r\n\r\nexport default function Button({onClick}) {\r\n     window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n    });\r\n\r\n    return (\r\n        <button onClick={ onClick} className=\"load-more\">Load more</button>\r\n    )\r\n    \r\n}","import React, { Component } from 'react';\r\nimport fetchImagesAPI, { resetPage } from '../../sourse/images-API';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LMButton from '../Button';\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    imagesSearch: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.imageName !== this.props.imageName) {\r\n      resetPage();\r\n      fetchImagesAPI\r\n        .fetchImages(this.props.imageName)\r\n        .then(imagesOnFeedback => {\r\n          this.setState({ imagesSearch: imagesOnFeedback.hits });\r\n        });\r\n      console.log(this.state.imagesSearch);\r\n    }\r\n  }\r\n\r\n  fetchingImages = () => {};\r\n\r\n  onLoadMoreClick = e => {\r\n    console.log(e.target);\r\n    fetchImagesAPI.fetchImages(this.props.imageName).then(imagesOnFeedback => {\r\n      this.setState({ imagesSearch: imagesOnFeedback.hits });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { imagesSearch } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <ul className=\"ImageGallery\">\r\n          {imagesSearch &&\r\n            imagesSearch.map(image => (\r\n              <ImageGalleryItem id={image.id} src={image.webformatURL} />\r\n            ))}\r\n        </ul>\r\n        { }\r\n        <LMButton onClick={this.onLoadMoreClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (!e.currentTarget.value.trim()) {\r\n      return;\r\n    }\r\n    this.setState({ imageName: e.currentTarget.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          onChange={this.handleChange}\r\n          imageName={this.state.imageName}\r\n        />\r\n\r\n        <ImageGallery imageName={this.state.imageName} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}
{"version":3,"sources":["sourse/images-API.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Error/Error.js","App.js","index.js"],"names":["page","fetchImages","imageName","fetch","then","res","ok","json","Promise","reject","Error","resetPage","Searchbar","onChange","onSubmit","className","type","value","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","id","togleModal","largeURL","onClick","alt","Button","ImageGallery","imagesSearch","loadMore","map","image","webformatURL","largeImageURL","Modal","handelKeyDown","e","code","props","onClose","handleOverlayClick","target","currentTarget","window","addEventListener","this","removeEventListener","Component","error","App","state","status","modalIsOpen","largeImageNow","handleChange","setState","onLoadMoreClick","fetchImagesAPI","imagesOnFeedback","console","log","hits","handleOpenModal","handleCloseModal","handleFormSubmit","preventDefault","catch","color","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45037d61.chunk.js","sourcesContent":["let page = 1;\r\nconst USER_KEY = '21922241-ac53faccd58a6508b64890669';\r\n\r\nexport default function fetchImages(imageName) {\r\n  return fetch(`https://pixabay.com/api/?q=${imageName}&page=${page}&key=${USER_KEY}&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(res => {\r\n    if (res.ok) {\r\n      incrementPage();\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нету картинок по запросу: ${imageName}`));\r\n  });\r\n}\r\n\r\nfunction incrementPage() {\r\n  page += 1;\r\n}\r\n\r\nexport function resetPage() {\r\n  page = 1;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Searchbar({ onChange, imageName, onSubmit }) {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={onSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={onChange}\r\n          value={imageName}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ImageGalleryItem({ src, id, togleModal, largeURL }) {\r\n  return (\r\n    <li key={id} onClick={togleModal} className=\"ImageGalleryItem\">\r\n      <img src={src} alt={largeURL} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default function Button({ onClick }) {\r\n\r\n  return (\r\n    <button onClick={onClick} className=\"load-more\" id=\"loadMore\">\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LMButton from '../Button';\r\n\r\nexport default function ImageGallery({ imagesSearch, loadMore, togleModal }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className=\"ImageGallery\">\r\n        {imagesSearch &&\r\n          imagesSearch.map(image => (\r\n            <ImageGalleryItem\r\n              togleModal={togleModal}\r\n              id={image.id}\r\n              src={image.webformatURL}\r\n              largeURL={image.largeImageURL}\r\n            />\r\n          ))}\r\n      </ul>\r\n\r\n      <LMButton onClick={loadMore} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handelKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handelKeyDown);\r\n  }\r\n\r\n  handelKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"pictures\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Error(error) {\r\n  return <h1>{error}</h1>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport fetchImagesAPI, { resetPage } from './sourse/images-API';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\n// import Loader from './components/Loader';\r\nimport Loader from 'react-loader-spinner';\r\nimport Error from './components/Error';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageName: '',\r\n    error: null,\r\n    imagesSearch: null,\r\n    status: 'idle',\r\n    modalIsOpen: false,\r\n    largeImageNow: null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ imageName: e.target.value });\r\n  };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.imageName !== this.state.imageName) {\r\n  //     this.setState({ status: 'pending' });\r\n\r\n  //     resetPage();\r\n\r\n  //     fetchImagesAPI(this.state.imageName)\r\n  //       .then(imagesOnFeedback => {\r\n  //         this.setState({\r\n  //           imagesSearch: imagesOnFeedback.hits,\r\n  //           status: 'resolved',\r\n  //         });\r\n  //       })\r\n  //       .catch(error => this.setState({ error, status: 'rejected' }));\r\n  //   }\r\n  // }\r\n\r\n  onLoadMoreClick = e => {\r\n    fetchImagesAPI(this.state.imageName).then(imagesOnFeedback => {\r\n      console.log(this.state.imagesSearch);\r\n      console.log(imagesOnFeedback.hits);\r\n      this.setState({\r\n        imagesSearch: [...this.state.imagesSearch, ...imagesOnFeedback.hits],\r\n      });\r\n    });\r\n  };\r\n\r\n  handleOpenModal = e => {\r\n    if (e.target.className === 'ImageGalleryItem-image') {\r\n      this.setState({\r\n        modalIsOpen: !this.state.modalIsOpen,\r\n        largeImageNow: e.target.alt,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen,\r\n      largeImageNow: null,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ status: 'pending' });\r\n\r\n    resetPage();\r\n\r\n    fetchImagesAPI(this.state.imageName)\r\n      .then(imagesOnFeedback => {\r\n        this.setState({\r\n          imagesSearch: imagesOnFeedback.hits,\r\n          status: 'resolved',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }));\r\n  };\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    if (status === 'idle') {\r\n      return (\r\n        <>\r\n          <Searchbar\r\n            onSubmit={this.handleFormSubmit}\r\n            onChange={this.handleChange}\r\n            imageName={this.state.imageName}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return (\r\n        <>\r\n          <Searchbar\r\n            onSubmit={this.handleFormSubmit}\r\n            onChange={this.handleChange}\r\n            imageName={this.state.imageName}\r\n          />\r\n          <div className=\"container-loader\">\r\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <Searchbar\r\n            onSubmit={this.handleFormSubmit}\r\n            onChange={this.handleChange}\r\n            imageName={this.state.imageName}\r\n          />\r\n\r\n          <ImageGallery\r\n            imagesSearch={this.state.imagesSearch}\r\n            loadMore={this.onLoadMoreClick}\r\n            togleModal={this.handleOpenModal}\r\n          />\r\n\r\n          {this.state.modalIsOpen && (\r\n            <Modal\r\n              largeImageURL={this.state.largeImageNow}\r\n              onClose={this.handleCloseModal}\r\n            />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return (\r\n        <>\r\n          <Error error={this.state.error} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}